name: CI

on: push

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          check-latest: true

      - name: Install dependencies
        run: npm ci

      - name: Prettier
        run: npm run prettier

      - name: commitlint
        run: npm run commitlint

      - name: build
        run: docker build -t test:latest .

  release:
    if: ${{ github.ref == 'refs/heads/main' }}

    needs: [test]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          check-latest: true

      - name: Import GPG key
        run: echo $GPG_KEY | base64 --decode | gpg --batch --import
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}

      - name: Add the custom gpg executable
        run: |
          rm -rf /tmp/gpg.sh
          echo 'gpg --batch --pinentry-mode=loopback --passphrase $GPG_KEY_PASSPHRASE $@' >> /tmp/gpg.sh
          chmod +x /tmp/gpg.sh

      - name: Setup git
        run: |
          git config commit.gpgsign true
          git config user.signingkey $GPG_KEY_ID
          git config gpg.program /tmp/gpg.sh
        env:
          GPG_KEY_ID: ${{ vars.GPG_KEY_ID }}

      - name: Install dependencies
        run: npm ci

      - name: Release
        run: npx semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GPG_KEY_PASSPHRASE: ${{ secrets.GPG_KEY_PASSPHRASE }}
          GIT_COMMITTER_EMAIL: ${{ vars.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ vars.GIT_COMMITTER_NAME }}
